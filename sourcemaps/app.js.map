{"version":3,"sources":["app.coffee"],"names":[],"mappings":"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","file":"app.js","sourceRoot":"/source/","sourcesContent":["\n\n############################################################################################################\ntry\n  ### https://github.com/ddopson/node-segfault-handler ###\n  SegfaultHandler = require 'segfault-handlerXXXXX'\n  SegfaultHandler.registerHandler()\n  # SegfaultHandler.causeSegfault()\ncatch error\n  ### ignore silently if segfault-handler is not installed: ###\n  throw error unless error[ 'message' ] is \"Cannot find module 'segfault-handler'\"\n############################################################################################################\n\n\n############################################################################################################\nnjs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'test-electron/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\napp                       = require 'app'\nBrowserWindow             = require 'browser-window'\nipc                       = require 'ipc'\n\n\n\n# // CND.dir( app )\n# // _emit = app.emit\n# // app.emit = function(){\n# //   log( arguments )\n# //   _emit.apply( app, arguments )\n# //   }\n\n# // log( app )\n# // log( process[ 'versions' ] )\n\noptions =\n  windows:\n    main:\n      width:      1200\n      height:     800\n      dev:        yes\n    settings:\n      width:      400\n      height:     400\n      show:       no\n\nwindows = {}\n\napp.on 'ready', ->\n  log \"app ready\"\n  do ->\n    for window_name, window_settings of options[ 'windows' ]\n      w                       = new BrowserWindow window_settings\n      template_name           = window_settings[ 'template' ] ? window_name\n      file_route              = __dirname + '/' + template_name + '.html'\n      unless njs_fs.existsSync file_route\n        ### makeshift measure until https://github.com/atom/electron/issues/2213 gets resolved ###\n        alert '©2213',  \"missing file #{rpr file_route}\"\n        throw new Error \"missing file #{rpr file_route}\"\n      url                     = 'file://' + file_route\n      show_devtools           = window_settings[ 'dev' ] ? no\n      windows[ window_name ]  = w\n      w.loadUrl url\n      w.openDevTools() if show_devtools\n      log url\n\n\napp.on 'gpu-process-crashed',             -> whisper 'gpu-process-crashed'\napp.on 'select-certificate',              -> whisper 'select-certificate'\napp.on 'activate-with-no-open-windows',   -> whisper 'activate-with-no-open-windows'\napp.on 'before-quit',                     -> whisper 'before-quit'\napp.on 'browser-window-blur',             -> whisper 'browser-window-blur'\napp.on 'browser-window-focus',            -> whisper 'browser-window-focus'\napp.on 'open-file',                       -> whisper 'open-file'\napp.on 'open-url',                        -> whisper 'open-url'\napp.on 'quit',                            -> whisper 'quit'\napp.on 'ready',                           -> whisper 'ready'\napp.on 'will-finish-launching',           -> whisper 'will-finish-launching'\napp.on 'will-quit',                       -> whisper 'will-quit'\napp.on 'window-all-closed',               -> whisper 'window-all-closed'\n\n\nipc.on 'show', ( event, window_name ) ->\n  help \"show: #{rpr window_name}\"\n  unless ( w = windows[ window_name ] )?\n    ### makeshift measure until https://github.com/atom/electron/issues/2213 gets resolved ###\n    alert '©2213',  \"unknown window #{rpr window_name}\"\n    throw new Error \"unknown window #{rpr window_name}\"\n  w.show()\n\nipc.on 'hide', ( event, window_name ) ->\n  help \"hide: #{rpr window_name}\"\n  unless ( w = windows[ window_name ] )?\n    ### makeshift measure until https://github.com/atom/electron/issues/2213 gets resolved ###\n    alert '©2213',  \"unknown window #{rpr window_name}\"\n    throw new Error \"unknown window #{rpr window_name}\"\n  w.hide()\n"]}